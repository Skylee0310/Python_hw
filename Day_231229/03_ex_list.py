'''
리스트 데이터 타입
- 여러 종류의 여러 개의 데이터를 저장하는 타입.
- 문법 : [데이터1, 데이터2, ...., 데이터N]
- 특징 : 데이터 하나 하나를 요소/원소라고 함.
-       각 요소/원소를 식별하기 위해서 인덱싱(indexing) 사용.
- 순서가 있는 데이터 타입 => 시퀀스 데이터 타입.
'''

# 리스트 데이터 생성
# 숫자 10개를 메모리에 저장
no1 = 23
no2 = 30
no3 = 94
no4 = 52
no5 = 100
no6 = 98
no7 = 18
no8 = 78
no9 = 11
no10 = 32
no = [23, 30, 94, 52, 100, 98, 18, 78, 11, 32]
print(f'id(no) => {id(no)}\nid(no[0]) => {id(no[0])}')
print(f'id(no[1]) => {id(no[1])}')
print(f'id(no1) = > {id(no1)}')

#리스트의 원소/요소 한 개씩 접근하는 방법 => 변수명[인덱스]
# - 왼쪽 => 오른쪽 : 0~
# - 오른쪽 => 왼쪽 : -1 ~
# => 슬라이싱 가능.
# ___________________________________________________________
# 마지막 3개의 점수만 출력해 주세요.
print(f'마지막 3개의 요소 출력 : {no[-3:]}')

# 짝수번째 인덱스만 출력해 주세요.
print(f'짝수번 인덱스값만 출력 : {no[::2]}')
print(f'홀수번 인덱스값만 출력 : {no[1::2]}')